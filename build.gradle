plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.flywaydb.flyway" version '8.2.0'
}

group = 'com.springhack'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'mysql:mysql-connector-java:8.0.27'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.1'

    // セッション管理の設定
    // implementation "org.springframework.boot:spring-boot-starter-data-redis"
    // implementation "org.springframework.session:spring-session-data-redis"

    // Lombokの設定
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 開発環境の設定
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testの設定
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
    // Lombokの設定
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    // IntelliJ IDEAでJUnitを実行するための設定
    useJUnitPlatform()

    // テスト実行結果をログ出力するための設定
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

flyway {
    url = 'jdbc:mysql://localhost:3306/okozukai'
    user = 'okozukaiadmin'
    password = 'lknuve7gAre'
    schemas = ['okozukai']
}

task dockerRestart {
    dependsOn(bootJar)
    doLast {
        println("dockerコンテナを再起動します。")
        "docker container restart okozukai-app".execute()
    }
}
